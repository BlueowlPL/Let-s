{{ 'tabs-section.css' | asset_url | stylesheet_tag }}

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
   .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}



<div class="page-width section-{{ section.id }}-padding">
 <div class="tabs-section">
  {% for block in section.blocks %}
    <input type="radio" name="tabs" id="tabone" checked="checked">
    <label for="tabone">{{ section.settings.tab_1_title | escape }}</label>
    <div class="tab">
      <p>Content is UX. If the primary purpose of websites is to deliver valuable content to an audience, we should be designing content-first for the best possible UX.</p>
      {% if block.settings.vertical_alignment == 'zdjęcie' %}
      <div class="tab--image__container">
        <div class="tab-image">
          {%- if block.settings.image != blank -%}
            {{ block.settings.image | image_url: width: 320, height: 240 | class:'card-media' | image_tag:
              loading: 'lazy',
              sizes: sizes,
              widths: '165, 320'
            }}
          {%- else -%}
            {{ 'image' | placeholder_svg_tag: 'placeholder-svg' }}
          {%- endif -%}
        </div>
      </div>
        {% elsif block.settings.vertical_alignment == 'tekst' %}
        <p>Tekst</p>
        {% endif %}
        </div>
      </div>
    </div>
    {% endfor %}
  </div>
</div>
  
  {% comment %}
    {% if section.settings.tab_2_title != blank %}
      <input type="radio" name="tabs" id="tabtwo">
      <label for="tabtwo">{{ section.settings.tab_2_title | escape }}</label>
      <div class="tab">
        <p>Content is UX. If the primary purpose of websites is to deliver valuable content to an audience, we should be designing content-first for the best possible UX.</p>
      </div>
    {% endif %}
   
    {% if section.settings.tab_3_title != blank %}
      <input type="radio" name="tabs" id="tabthree">
      <label for="tabthree">{{ section.settings.tab_3_title | escape }}</label>
      <div class="tab">
        <p>hfioezhogehzioghz</p>
      </div>
   {% endif %}
  </div>
</div>
{% endcomment %}
    
{% schema %}
  {
    "name": "Tabs section product",
    "settings": [
      {
        "type": "text",
        "id": "tab_1_title",
        "label": "Tab 1 title"
      },
      {
        "type": "text",
        "id": "tab_2_title",
        "label": "Tab 2 title"
      },
      {
        "type": "text",
        "id": "tab_3_title",
        "label": "Tab 3 title"
      },
      {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Padding top",
      "default": 36
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Padding bottom",
      "default": 36
    }
    ],
      "blocks": [
    {
      "type": "block",
      "name": "tab",
      "settings": [
        {
          "type": "select",
          "id": "vertical_alignment",
          "label": "Zawartość taba",
          "options": [
            {
              "value": "zdjęcie",
              "label": "Zdjęcie"
            },
            {
              "value": "Tekst",
              "label": "Tekst"
            }
          ],
          "default": "Tekst"
        },
        {
        "id": "image",
        "type": "image_picker",
        "label": "Product Image"
        }
      ]
    }
    ],
    "presets": [
    {
      "name": "Tabs section"
    }
  ]
  }
{% endschema %}

<script>
  const tabs = document.querySelectorAll('.tab');
  const radios = document.querySelectorAll('input[type="radio"]');
  console.log(tabs)
  
  radios.forEach(radio => {
  radio.addEventListener('change', (event) => {
    // znajdź zakładkę, która odpowiada wybranej opcji
    const targetTab = document.querySelector(`#${event.target.id} + .tab`);
    // usuń aktywną klasę ze wszystkich zakładek
    tabs.forEach(tab => tab.classList.remove('active'));
    // dodaj aktywną klasę do wybranej zakładki
    targetTab.classList.add('active');
  });
});
</script>

















